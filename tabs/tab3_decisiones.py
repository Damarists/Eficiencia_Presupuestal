import streamlit as st
import pandas as pd
import numpy as np

def mostrar(modelos, datos_combinados):
    st.header("ðŸŽ¯ Toma de Decisiones EstratÃ©gicas")
    st.markdown("""
    **Â¿QuÃ© analiza?**  
    Identifica quÃ© proyectos o categorÃ­as tienen mayor probabilidad de Ã©xito para priorizar recursos.
    """)

    if st.button("Evaluar Decisiones", key="dec_btn"):
        with st.spinner('Analizando viabilidad...'):
            model = modelos['decisiones_estrategicas']
            X = datos_combinados[['PIA', 'PIM', 'AÃ±o', 'Tipo_Dataset_encoded', 'Nombre_encoded']]
            y_pred = model.predict(X)
            y_proba = model.predict_proba(X)[:, 1]

            datos_combinados['Prob_Exito'] = y_proba * 100
            datos_combinados['Recomendacion'] = np.where(y_pred == 1, "Priorizar", "Revisar")

            st.subheader("Recomendaciones EstratÃ©gicas")
            top_priorizar = datos_combinados.sort_values('Prob_Exito', ascending=False).head(5)

            cols = st.columns(2)
            with cols[0]:
                st.metric("Items recomendados para priorizar",
                          f"{len(datos_combinados[datos_combinados['Recomendacion'] == 'Priorizar'])}")
            with cols[1]:
                st.metric("Items que requieren revisiÃ³n",
                          f"{len(datos_combinados[datos_combinados['Recomendacion'] == 'Revisar'])}")

            st.write("**Top 5 items recomendados para priorizar:**")
            st.dataframe(top_priorizar[['Tipo_Dataset', 'Nombre_Original', 'Prob_Exito', 'Recomendacion']])

            st.subheader("Todos los items recomendados para priorizar")
            items_priorizar = datos_combinados[datos_combinados['Recomendacion'] == 'Priorizar']
            st.dataframe(items_priorizar[['Tipo_Dataset', 'Nombre_Original', 'Prob_Exito', 'Recomendacion']])

            st.subheader("Todos los items recomendados para revisar")
            items_priorizar = datos_combinados[datos_combinados['Recomendacion'] == 'Revisar']
            st.dataframe(items_priorizar[['Tipo_Dataset', 'Nombre_Original', 'Prob_Exito', 'Recomendacion']])

            st.subheader("GuÃ­a de AcciÃ³n")
            st.info("""**Nota:**
            Los que se encuentran en la secciÃ³n de Priorizar son los que primero han pasado por un filtro en el que su avance de ejecuciÃ³n ha sido mayor a 80% y los de revisiÃ³n su avance de ejecuciÃ³n es menor a 80%.
            """)
            st.success("""
            **Para items 'Priorizar':**  
            ðŸ”¹ Asignar recursos segÃºn lo planeado  
            ðŸ”¹ Mantener seguimiento estÃ¡ndar  
            ðŸ”¹ Replicar buenas prÃ¡cticas
            """)

            st.warning("""
            **Para items 'Revisar':**  
            ðŸ”¹ Analizar causas de bajo desempeÃ±o esperado  
            ðŸ”¹ Considerar ajustes en asignaciÃ³n  
            ðŸ”¹ Implementar planes de contingencia  
            ðŸ”¹ Aumentar frecuencia de monitoreo
            """)